apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: ingress-nginx
  name: nginx-ingress
  namespace: sit
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: ingress-nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
      creationTimestamp: null
      labels:
        app: ingress-nginx
    spec:
      containers:
        - args:
            - /nginx-ingress-controller
            - '--default-backend-service=$(POD_NAMESPACE)/frontend'
            - '--annotations-prefix=nginx.ingress.kubernetes.io'
            - '--http-port=80'
            - '--https-port=443'
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: 'quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.9.0'
          imagePullPolicy: Always
          name: nginx-ingress
          ports:
            - containerPort: 80
              hostPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              name: https
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: ecsd00100eed.epam.com
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30