apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: ingress-nginx
  name: nginx-ingress
  namespace: sit
spec:
  progressDeadlineSeconds: 600
  replicas: 0
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: ingress-nginx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ingress-nginx
    spec:
      containers:
        - env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: nginx
          imagePullPolicy: IfNotPresent
          name: nginx-ingress
          ports:
            - containerPort: 80
              hostPort: 80
              name: http
              protocol: TCP
            - containerPort: 443
              hostPort: 443
              name: https
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              name: nexus-conf
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/hostname: ecsd00100eed.epam.com
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: nginx-ingress-serviceaccount
      serviceAccountName: nginx-ingress-serviceaccount
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: nginx-conf
          name: nexus-conf
