apiVersion: v1
kind: Template
metadata:
  annotations:
    description: |-
          Gerrit service, with persistent storage.
          NOTE: You must have persistent volumes available in your cluster to use this template.
    iconClass: icon-jenkins
    openshift.io/display-name: EDP Gerrit (Persistent - gluster)
    tags: ci-cd
    #template.openshift.io/documentation-url: https://docs.openshift.org/latest/using_images/other_images/jenkins.html
    template.openshift.io/long-description: This template deploys a Gerrit server
      capable of managing OpenShift Pipeline builds and supporting OpenShift-based
      oauth login.
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/support-url: https://access.redhat.com
  name: gerrit
message: "Login to Gerrit with the you EPAM GitLab account"
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: gerrit-add-user-plugin
  data:
    config.sh: |
      if [[ ! -f /var/gerrit/review_site/plugins/add-user-plugin-2.11.3.jar ]]
      then
       [ ! -d /var/gerrit/review_site/plugins ] && mkdir -p /var/gerrit/review_site/plugins
       cp /tmp/add-user-plugin-2.11.3.jar /var/gerrit/review_site/plugins/add-user-plugin-2.11.3.jar
      fi
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: gerrit
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      volume.beta.kubernetes.io/storage-class: glusterfs-storage
    name: gerrit-data
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${GERRIT_DATA_CAPACITY}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    annotations:
      volume.beta.kubernetes.io/storage-class: glusterfs-storage
    name: gerrit-db
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${GERRIT_DB_CAPACITY}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: gerrit
    name: gerrit
  spec:
    ports:
    - name: ui
      port: 8080
    - name: ssh
      port: 29418
    selector:
      app: gerrit
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: gerrit-db
    name: gerrit-db
  spec:
    ports:
    - name: db
      port: 5432
    selector:
      app: gerrit-db
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      description: Route for Gerrit's http service.
    name: gerrit
    labels:
      app: gerrit
  spec:
    to:
      kind: Service
      name: gerrit
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: gerrit
  data:
    config: |
      Host git.epam.com
          User git
          IdentityFile /var/gerrit/review_site/id_rsa
          StrictHostKeyChecking no
          UserKnownHostsFile /dev/null
    replication.config: |
      [gerrit]
        defaultForceUpdate = true
      [remote "${GERRIT_PROJECT}"]
        url = ${GERRIT_GIT_URL}
        fetch = +refs/*:refs/*
        mirror = true
        projects = ${GERRIT_PROJECT}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: gerrit
    name: gerrit-db
  spec:
    replicas: 1
    selector:
      app: gerrit-db
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: gerrit-db
      spec:
        containers:
        - name: gerrit-db
          env:
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: gerrit-db
                key: database-name
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: gerrit-db
                key: database-user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gerrit-db
                key: database-password
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          - name: POD_IP
            valueFrom: { fieldRef: { fieldPath: status.podIP } }
          image: postgres:9.6
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
              protocol: TCP
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - exec pg_isready --host $POD_IP
            initialDelaySeconds: 60
            timeoutSeconds: 3
            periodSeconds: 5
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: gerrit-db
        serviceAccount: gerrit
        volumes:
          - name: gerrit-db
            persistentVolumeClaim:
              claimName: gerrit-db
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: gerrit
    name: gerrit
  spec:
    replicas: 1
    selector:
      app: gerrit
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        labels:
          app: gerrit
      spec:
        initContainers:
        - name: init-gerrit-db
          image: busybox
          command: ["sh", "-c", "while ! nc -w 1 gerrit-db 5432 </dev/null; do echo waiting for gerrit-db; sleep 10; done;"]
        - name: add-user-plugin
          volumeMounts:
          - mountPath: /tmp/config.sh
            subPath: config.sh
            name: python-script
          - mountPath: /var/gerrit/review_site
            name: gerrit-data
          image: ${GERRIT_JOB_VERSION}
          command: ["sh", "/tmp/config.sh"]
        containers:
        - name: gerrit
          env:
          - name: GERRIT_ADMIN_USER
            value: 'admin'
          - name: GERRIT_ADMIN_FULLNAME
            value: 'Administrator'
          - name: GERRIT_ADMIN_EMAIL
            value: 'admin1@fabric8.io'
          - name: GERRIT_ADMIN_PWD
            value: 'admin123'
          - name: WEBURL
            value: ${GERRIT_WEB_URL}
          - name: AUTH_TYPE
            value: DEVELOPMENT_BECOME_ANY_ACCOUNT
          - name: OAUTH_GITLAB_ROOT_URL
            value: https://git.epam.com/
          - name: OAUTH_GITLAB_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: gitlab-oauth
                key: secret
          - name: OAUTH_GITLAB_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: gitlab-oauth
                key: id
          - name: DATABASE_TYPE
            value: postgresql
          - name: DB_PORT_5432_TCP_ADDR
            value: gerrit-db
          - name: DB_PORT_5432_TCP_PORT
            value: "5432"
          - name: DB_ENV_POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: ${GERRIT_DB_SECRET}
                key: database-name
          - name: DB_ENV_POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: ${GERRIT_DB_SECRET}
                key: database-user
          - name: DB_ENV_POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: ${GERRIT_DB_SECRET}
                key: database-password
          - name: GERRIT_INIT_ARGS
            value: --install-plugin=commit-message-length-validator --install-plugin=download-commands --install-plugin=hooks --install-plugin=reviewnotes --install-plugin=singleusergroup --install-plugin=replication
          image: openfrontier/gerrit:${GERRIT_VERSION}
          imagePullPolicy: Always
          name: gerrit
          ports:
          - name: ui
            containerPort: 8080
          - name: ssh
            containerPort: 29418
          readinessProbe:
            initialDelaySeconds: 120
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 10
            tcpSocket:
              port: 8080
          resources:
            requests:
              memory: 1Gi
          volumeMounts:
            - mountPath: /var/gerrit/review_site
              name: gerrit-data
            - mountPath: /var/gerrit/review_site/etc/replication.config
              subPath: replication.config
              name: replication-config
            - mountPath: /var/gerrit/.ssh
              name: ssh-config
        serviceAccount: gerrit
        volumes:
          - name: gerrit-data
            persistentVolumeClaim:
              claimName: gerrit-data
          - configMap:
              defaultMode: 420
              items:
                - key: replication.config
                  path: replication.config
              name: gerrit
            name: replication-config
          - configMap:
              defaultMode: 420
              items:
                - key: config
                  path: config
              name: gerrit
            name: ssh-config
          - name: python-script
            configMap:
              defaultMode: 420
              name: gerrit-add-user-plugin
parameters:
- displayName: Gerrit version
  value: "2.14.1"
  name: GERRIT_VERSION
- displayName: Gerrit DB secret
  value: "gerrit-db"
  name: GERRIT_DB_SECRET
- description: Volume space available for Gerrit
  displayName: Gerrit Volume Capacity
  name: GERRIT_DATA_CAPACITY
  value: 2Gi
- description: Volume space available for Gerrit DB
  displayName: Gerrit database Volume Capacity
  name: GERRIT_DB_CAPACITY
  value: 2Gi
- description: Gerrit WEB URL is needed for authentication purposes
  displayName: Gerrit WEB URL
  name: GERRIT_WEB_URL
  value: "http://gerrit-test-mb.demo.edp.projects.epam.com"
- displayName: Gerrit job version
  value: "docker-registry-default.main.edp.projects.epam.com/infra/edp-gerrit-job:latest"
  name: GERRIT_JOB_VERSION